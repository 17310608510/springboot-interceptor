2020-11-17 14:22:22,627 [main] [com.example.demo.SpringbootInterceptorApplication] [INFO] (StartupInfoLogger.java:50)- Starting SpringbootInterceptorApplication on DESKTOP-MPF9R39 with PID 15500 (E:\workspace-spring-tool-suite-4-4.1.2.RELEASE\springboot-interceptor\target\classes started by zuoruibo in E:\workspace-spring-tool-suite-4-4.1.2.RELEASE\springboot-interceptor)
2020-11-17 14:22:22,632 [main] [com.example.demo.SpringbootInterceptorApplication] [DEBUG] (StartupInfoLogger.java:53)- Running with Spring Boot v2.1.3.RELEASE, Spring v5.1.5.RELEASE
2020-11-17 14:22:22,633 [main] [com.example.demo.SpringbootInterceptorApplication] [INFO] (SpringApplication.java:675)- No active profile set, falling back to default profiles: default
2020-11-17 14:22:23,956 [main] [com.example.demo.SpringbootInterceptorApplication] [INFO] (StartupInfoLogger.java:59)- Started SpringbootInterceptorApplication in 1.636 seconds (JVM running for 3.306)
2020-11-17 14:23:02,049 [http-nio-9090-exec-1] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:48)- 请求参数, url: /error, method: GET, params: null
2020-11-17 14:23:02,049 [http-nio-9090-exec-1] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:56)- 【实现注入】调用服务层方法代码：demoService.sayHello()=hello from service layer
2020-11-17 14:23:02,570 [http-nio-9090-exec-2] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:48)- 请求参数, url: /error, method: GET, params: null
2020-11-17 14:23:02,570 [http-nio-9090-exec-2] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:56)- 【实现注入】调用服务层方法代码：demoService.sayHello()=hello from service layer
2020-11-17 14:23:03,171 [http-nio-9090-exec-3] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:48)- 请求参数, url: /error, method: GET, params: null
2020-11-17 14:23:03,172 [http-nio-9090-exec-3] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:56)- 【实现注入】调用服务层方法代码：demoService.sayHello()=hello from service layer
2020-11-17 14:23:03,785 [http-nio-9090-exec-4] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:48)- 请求参数, url: /error, method: GET, params: null
2020-11-17 14:23:03,786 [http-nio-9090-exec-4] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:56)- 【实现注入】调用服务层方法代码：demoService.sayHello()=hello from service layer
2020-11-17 14:23:04,386 [http-nio-9090-exec-5] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:48)- 请求参数, url: /error, method: GET, params: null
2020-11-17 14:23:04,387 [http-nio-9090-exec-5] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:56)- 【实现注入】调用服务层方法代码：demoService.sayHello()=hello from service layer
2020-11-17 14:23:04,986 [http-nio-9090-exec-6] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:48)- 请求参数, url: /error, method: GET, params: null
2020-11-17 14:23:04,986 [http-nio-9090-exec-6] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:56)- 【实现注入】调用服务层方法代码：demoService.sayHello()=hello from service layer
2020-11-17 14:23:05,428 [http-nio-9090-exec-7] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:48)- 请求参数, url: /exception, method: GET, params: null
2020-11-17 14:23:05,428 [http-nio-9090-exec-7] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:56)- 【实现注入】调用服务层方法代码：demoService.sayHello()=hello from service layer
2020-11-17 14:23:35,571 [http-nio-9090-exec-9] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:48)- 请求参数, url: /error, method: GET, params: null
2020-11-17 14:23:35,572 [http-nio-9090-exec-9] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:56)- 【实现注入】调用服务层方法代码：demoService.sayHello()=hello from service layer
2020-11-17 14:23:36,175 [http-nio-9090-exec-10] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:48)- 请求参数, url: /error, method: GET, params: null
2020-11-17 14:23:36,175 [http-nio-9090-exec-10] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:56)- 【实现注入】调用服务层方法代码：demoService.sayHello()=hello from service layer
2020-11-17 14:23:36,776 [http-nio-9090-exec-1] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:48)- 请求参数, url: /error, method: GET, params: null
2020-11-17 14:23:36,777 [http-nio-9090-exec-1] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:56)- 【实现注入】调用服务层方法代码：demoService.sayHello()=hello from service layer
2020-11-17 14:23:39,883 [http-nio-9090-exec-2] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:48)- 请求参数, url: /error, method: GET, params: null
2020-11-17 14:23:39,883 [http-nio-9090-exec-2] [com.example.demo.config.MyHttpInterceptor] [INFO] (MyHttpInterceptor.java:56)- 【实现注入】调用服务层方法代码：demoService.sayHello()=hello from service layer
